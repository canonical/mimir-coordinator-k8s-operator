# Copyright 2023 Ubuntu
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static-{charm,lib}, unit, scenario

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    black {[vars]all_path}
    ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell .
    ruff check {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{charm, lib}]
description = Run static analysis checks
deps =
  pyright==1.1.344
  -r{toxinidir}/requirements.txt
commands =
  charm: pyright {[vars]src_path} {posargs}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    deepdiff
    -r{toxinidir}/requirements.txt
    
    # Binary deps from from charmcraft.yaml
    cryptography
    jsonschema
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {[vars]tst_path}unit \
                 {posargs}
    coverage report

[testenv:scenario]
description = Run scenario tests
deps =
    pytest
    coverage[toml]
    ops-scenario>=3.0
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {[vars]tst_path}scenario \
                 {posargs}
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v \
           -s \
           --tb native \
           --log-cli-level=INFO \
           {[vars]tst_path}integration \
           {posargs}
