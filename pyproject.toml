[project]
name = "mimir-k8s"
version = "0.1"  # this is in fact irrelevant
requires-python = ">=3.12"

dependencies = [
    "ops",
    "cosl>=0.0.43",
    "pydantic",
    "crossplane",
    # PYDEPS
    # lib/charms/tempo_k8s/v1/charm_tracing.py
    "opentelemetry-exporter-otlp-proto-http",
]

[project.optional-dependencies]
static = ["pyright==1.1.344"]
unit = [
    "pytest",
    "coverage[toml]",
    "deepdiff",
    "numpy",
    # Binary deps from from charmcraft.yaml
    "jsonschema",
    "cryptography",
]
integration = [
    "pytest",
    "minio",
    "tenacity",
    "juju",
    "pytest-operator",
]

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
log_cli_level = "INFO"
markers = [
  'setup: marks tests as setup (deselect with -m "not setup")'
]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

# Linting tools configuration
[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint]
ignore = ["E501", "D107"]
extend-ignore = [
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
select = ["E", "W", "F", "C", "N", "D", "I001"]
per-file-ignores = {"tests/*" = ["D100","D101","D102","D103","D104"]}

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.pyright]
include = ["src"]
extraPaths = ["lib"]
pythonVersion = "3.8"
pythonPlatform = "Linux"
reportUnknownParameterType = true

[tool.codespell]
skip = ".git,.tox,build,venv*"
ignore-words-list = "assertIn,aNULL"
