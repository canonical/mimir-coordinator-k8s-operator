name: mimir-coordinator-k8s
assumes:
  - k8s-api

docs: https://discourse.charmhub.io/t/mimir-coordinator-index/10531

summary: Mimir coordinator

description: |
    Mimir coordinator.

containers:
  nginx:
    resource: nginx-image
  agent:
    resource: agent-image
    mounts:
      - storage: data
        location: /tmp/agent/data

storage:
  data:
    type: filesystem

resources:
  nginx-image:
    type: oci-image
    description: OCI image for nginx
    upstream-source: ubuntu/nginx:1.18-22.04_beta
  agent-image:
    type: oci-image
    upstream-source: ghcr.io/canonical/grafana-agent:latest
    description: OCI image for Grafana Agent

requires:
  # On the same mimir_worker interface, the coordinator will accept one relation to a worker per each Mimir component.
  # The relation(s) determine the role(s) the worker will assume.
  # Each Mimir worker can take on multiple roles; however, there can be no role replication among workers related to the
  # same coordinator, which is why we force `limit: 1`.
  mimir-compactor:
    interface: mimir_worker
    limit: 1
  mimir-distributor:
    interface: mimir_worker
    limit: 1
  mimir-ingester:
    interface: mimir_worker
    limit: 1
  mimir-querier:
    interface: mimir_worker
    limit: 1
  mimir-query-frontend:
    interface: mimir_worker
    limit: 1
  mimir-store-gateway:
    interface: mimir_worker
    limit: 1
  mimir-alertmanager:
    interface: mimir_worker
    limit: 1
  mimir-ruler:
    interface: mimir_worker
    limit: 1
  mimir-overrides-exporter:
    interface: mimir_worker
    limit: 1
  mimir-query-scheduler:
    interface: mimir_worker
    limit: 1

  s3:
    interface: s3
    limit: 1
    description: |
      The coordinator obtains storage info on behalf of the workers, and
      forwards all workers the storage details over mimir-worker.

  send-remote-write:
    interface: prometheus_remote_write
    description: |
      Forward workers' metrics and rules to the external prometheus
      (the coordinator, not the worker, owns all rule files).
      Obtain rule files to later send them to the mimir rules over another relation.

  logging-consumer:
    interface: loki_push_api
    description: |
      Forward workers' built-in logging rules to the external Loki
      (the coordinator, not the worker, owns all rule files).
      Obtain rules and Loki's API endpoint to later send them to the mimir ruler over another
      relation.

  ingress:
    interface: ingress
    limit: 1
    description: |
      Ingress-per-app, to load-balance across multiple units of the coordinator.

provides:
  grafana-dashboards-provider:
    interface: grafana_dashboard
    description: |
      Forward workers' built-in dashboards to grafana
      (the coordinator, not the worker, owns all dashboards).

  tracing:
    interface: tracing
    description: |
      Send traces to tempo.
